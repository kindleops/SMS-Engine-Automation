# render.yaml ‚Äî REI SMS Engine (bulletproof)
# - Web API + Worker using the same Dockerfile.
# - Strong curl options in cron jobs (auth header + x-cron-token, http/1.1, retries, timeouts).
# - All secrets marked sync:false (set in Render Dashboard).
# - Preview envs disabled to avoid duplicate jobs/services.

services:
  # üöÄ SMS Engine API
  - type: web
    name: rei-sms-engine
    env: docker
    plan: free
    dockerfilePath: ./Dockerfile.sms
    autoDeploy: true
    previews:
      enabled: false
    healthCheckPath: /health
    envVars:
      # --- Airtable (main & synonyms) ---
      - key: AIRTABLE_API_KEY
        sync: false
      - key: LEADS_CONVOS_BASE
        sync: false
      - key: AIRTABLE_LEADS_CONVOS_BASE_ID
        sync: false
      - key: CAMPAIGN_CONTROL_BASE
        sync: false
      - key: AIRTABLE_CAMPAIGN_CONTROL_BASE_ID
        sync: false
      - key: PERFORMANCE_BASE
        sync: false
      - key: AIRTABLE_PERFORMANCE_BASE_ID
        sync: false
      - key: AIRTABLE_REPORTING_KEY
        sync: false

      # --- Text/SMS provider ---
      - key: TEXTGRID_ACCOUNT_SID
        sync: false
      - key: TEXTGRID_AUTH_TOKEN
        sync: false

      # --- Webhook / cron auth (must match Worker + CronJobs) ---
      - key: WEBHOOK_TOKEN
        sync: false
      - key: CRON_TOKEN
        sync: false

      # --- Limiter (use Upstash REST; do NOT set REDIS_URL) ---
      - key: UPSTASH_REDIS_REST_URL
        sync: false
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false

      # --- Engine/runtime knobs ---
      - key: QUIET_HOURS_ENFORCED
        value: "true"
      - key: QUIET_START_HOUR_LOCAL
        value: "21"
      - key: QUIET_END_HOUR_LOCAL
        value: "9"
      - key: RATE_PER_NUMBER_PER_MIN
        value: "20"
      - key: GLOBAL_RATE_PER_MIN
        value: "5000"
      - key: DAILY_LIMIT
        value: "750"
      - key: DEDUPE_HOURS
        value: "72"
      - key: MESSAGES_PER_MIN
        value: "20"
      - key: JITTER_SECONDS
        value: "2"
      - key: RUNNER_SEND_AFTER_QUEUE
        value: "false"     # queue-only by default; API param can override

      # --- Optional: disable embedded schedulers (use Worker + Cron) ---
      - key: ENABLE_EMBEDDED_SCHEDULER
        value: "false"

      # --- Alerts (optional) ---
      - key: ALERT_PHONE
        sync: false
      - key: ALERT_EMAIL_WEBHOOK
        sync: false

  # ‚ôæÔ∏è Continuous SMS Worker
  - type: worker
    name: rei-sms-worker
    env: docker
    plan: free
    dockerfilePath: ./Dockerfile.sms
    autoDeploy: true
    previews:
      enabled: false
    envVars:
      # Same env as API
      - key: AIRTABLE_API_KEY
        sync: false
      - key: LEADS_CONVOS_BASE
        sync: false
      - key: AIRTABLE_LEADS_CONVOS_BASE_ID
        sync: false
      - key: CAMPAIGN_CONTROL_BASE
        sync: false
      - key: AIRTABLE_CAMPAIGN_CONTROL_BASE_ID
        sync: false
      - key: PERFORMANCE_BASE
        sync: false
      - key: AIRTABLE_PERFORMANCE_BASE_ID
        sync: false
      - key: AIRTABLE_REPORTING_KEY
        sync: false

      - key: TEXTGRID_ACCOUNT_SID
        sync: false
      - key: TEXTGRID_AUTH_TOKEN
        sync: false

      # Use Upstash REST limiter (do NOT set REDIS_URL)
      - key: UPSTASH_REDIS_REST_URL
        sync: false
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false

      # Worker loop knobs
      - key: WORKER_INTERVAL_SEC
        value: "30"
      - key: SEND_BATCH_LIMIT        # sms.worker reads these
        value: "500"
      - key: RETRY_LIMIT
        value: "100"
      - key: AUTORESPONDER_LIMIT
        value: "50"
      - key: AUTORESPONDER_VIEW
        value: "Unprocessed Inbounds"

      # Campaign runner behavior from worker (queue-only by default)
      - key: RUNNER_SEND_AFTER_QUEUE
        value: "false"

      # Quiet hours guard (must mirror API)
      - key: QUIET_HOURS_ENFORCED
        value: "true"
      - key: QUIET_START_HOUR_LOCAL
        value: "21"
      - key: QUIET_END_HOUR_LOCAL
        value: "9"

      # Auth (must match API + CronJobs)
      - key: WEBHOOK_TOKEN
        sync: false
      - key: CRON_TOKEN
        sync: false

    command: python -u -m sms.worker

# üîÑ Cronjobs (safety nets; worker runs continuously)
# - Sends both Authorization: Bearer and x-cron-token to match main.py
# - http/1.1 avoids some h2 curl quirks; retries reduce flakiness.
cronJobs:
  - name: run-autoresponder
    schedule: "*/10 * * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/autoresponder/autoresponder" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: run-campaigns
    schedule: "*/10 * * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/run-campaigns?limit=ALL" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: sms-retry-runner
    schedule: "*/30 * * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/retry" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: reset-daily-quotas
    schedule: "0 0 * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/reset-quotas" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: aggregate-kpis-daily
    schedule: "0 1 * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/aggregate-kpis" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: aggregate-kpis-weekly
    schedule: "0 2 * * 1"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/aggregate-kpis" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: aggregate-kpis-monthly
    schedule: "0 3 1 * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/aggregate-kpis" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: cron-all
    schedule: "*/15 * * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --retry 3 --retry-connrefused \
        --connect-timeout 7 --max-time 55 \
        -X POST "https://rei-sms-engine.onrender.com/cron/all?limit=500" \
        -H "Authorization: Bearer ${CRON_TOKEN}" \
        -H "x-cron-token: ${CRON_TOKEN}" \
        --data-binary ''

  - name: health-ping
    schedule: "*/5 * * * *"
    command: |
      curl --http1.1 --fail --silent --show-error --connect-timeout 5 --max-time 10 \
        "https://rei-sms-engine.onrender.com/health"